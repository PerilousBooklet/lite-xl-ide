{
    "PyMySQL Database Connection": {
        "prefix": "pymysql",
        "body": [
            "import pymysql\n",
            "from pymysql.constants import CLIENT\n",
            "class Database:\n\n",
            "\tdatabase_cred = {\n",
            "\t\t\"host\": \"${1:HOST}\",\n",
            "\t\t\"user\": \"${2:USER}\",\n",
            "\t\t\"password\": \"${3:PASSWORD}\",\n",
            "\t\t\"database\": \"${4:DATABASE}\",\n",
            "\t\t\"autocommit\": True,  # making sure updated, inserts, deletions are commited for every query\n",
            "\t\t\"cursorclass\": pymysql.cursors.DictCursor,\n",
            "\t}\n\n",
            "\tdef __init__(self, database_cred: dict = None):\n",
            "\t\tif database_cred:\n",
            "\t\t\tself.conn = pymysql.connect(**database_cred)\n",
            "\t\telse:\n",
            "\t\t\tself.conn = pymysql.connect(**self.database_cred)\n",
            "\t\t# end if\n\n",
            "\tdef run_qry(self, sql: str):\n",
            "\t\t# to check DB Connection pin the instance\n",
            "\t\tself.conn.ping()\n",
            "\t\twith self.conn.cursor() as cursor:\n",
            "\t\t\tcursor.execute(sql)\n",
            "\t\t\tself.conn.commit()\n",
            "\t\t\tresult = cursor.fetchall()\n",
            "\t\t# end with\n",
            "\t\treturn result\n\n",
            "\tdef run_multiple_queries(self, sql_statements: list[str]):\n",
            "\t\tif len(sql_statements) == 1:\n",
            "\t\t\tresult = self.run_qry(sql_statements[0])\n",
            "\t\t\treturn result\n\n",
            "\t\tnew_db_cred = {\"client_flag\": CLIENT.MULTI_STATEMENTS, **self.database_cred}\n",
            "\t\tsql_statements = \";\".join(sql_statements)\n\n",
            "\t\tsql_connetion = pymysql.connect(**new_db_cred)\n",
            "\t\t# to check DB Connection pin the instance\n",
            "\t\tsql_connetion.ping()\n",
            "\t\twith sql_connetion.cursor() as cursor:\n",
            "\t\t\taffected_rows = cursor.execute(sql_statements)\n",
            "\t\t\tself.conn.commit()\n",
            "\t\t\tresult = cursor.fetchall()\n",
            "\t\treturn result",
            "# end class"
        ],
        "description": "PymySQL database connection"
    }
}
